// Mocks generated by Mockito 5.4.0 from annotations
// in exam_mobii/test/service_test/service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i3;
import 'package:exam_mobii/data/services/user_service.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:retrofit/dio.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpResponse_0<T> extends _i1.SmartFake
    implements _i2.HttpResponse<T> {
  _FakeHttpResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1<T> extends _i1.SmartFake implements _i3.Response<T> {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserServiceAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserServiceAPI extends _i1.Mock implements _i4.UserServiceAPI {
  MockUserServiceAPI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.HttpResponse<String>> getUsers() => (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
        ),
        returnValue: _i5.Future<_i2.HttpResponse<String>>.value(
            _FakeHttpResponse_0<String>(
          this,
          Invocation.method(
            #getUsers,
            [],
          ),
        )),
      ) as _i5.Future<_i2.HttpResponse<String>>);
}

/// A class which mocks [HttpResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpResponse extends _i1.Mock implements _i2.HttpResponse<String> {
  @override
  String get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i3.Response<dynamic> get response => (super.noSuchMethod(
        Invocation.getter(#response),
        returnValue: _FakeResponse_1<dynamic>(
          this,
          Invocation.getter(#response),
        ),
        returnValueForMissingStub: _FakeResponse_1<dynamic>(
          this,
          Invocation.getter(#response),
        ),
      ) as _i3.Response<dynamic>);
}
